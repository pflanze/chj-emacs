#!/bin/bash

set -euo pipefail
IFS=

usage () {
    echo "usage: $0 packagename testedfilename targetdir [alternatepackagename]"
    echo "  Installs \$packagename via apt,"
    echo "  finds \$testedfilename in \$packagename,"
    echo "  then symlinks the found's file's parent directory to \$targetdir."
    echo "  If it finds no match in \$packagename, and alternatepackagename "
    echo "  was given, tries again with \$alternatepackagename."
    exit 1
}

if [ $# -ne 3 -a $# -ne 4 ]; then
    usage
fi

packagename=$1
testedfilename=$2
targetdir=$3
alternatepackagename=${4-}

if [ "$USER" != root ]; then
    echo "PLEASE RUN AS root:" apt-get install -y "$packagename"
else
    apt-get install -y "$packagename"
fi

# (Note: printf '%q' does not escape e.g. dot, it's not for regular
# expressions.)
pattern="/$(perl -we 'print quotemeta($ARGV[0])' "$testedfilename")$"

#echo "pattern=<$pattern>"

mapfile -t items < <(dpkg -L "$packagename" | egrep -- "$pattern")

if ((${#items[@]} != 1)); then
    if [ -n "$alternatepackagename" -a ${#items[@]} -eq 0 ]; then
        exec "$0" "$alternatepackagename" "$testedfilename" "$targetdir"
    else
        echo "$0 $packagename $testedfilename $targetdir: need exactly 1 match for pattern '$pattern', got ${#items[@]}" >&2
        exit 1
    fi
fi

set -x
ln -s "$(dirname "${items[0]}")" "$targetdir"
